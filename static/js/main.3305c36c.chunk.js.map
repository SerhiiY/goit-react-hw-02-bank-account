{"version":3,"sources":["components/Controls/style.module.css","components/Balance/style.module.css","components/TransactionHistory/style.module.css","components/Controls/index.jsx","components/Balance/index.jsx","components/TransactionHistory/index.jsx","components/Dashboard/index.jsx","components/App/index.jsx","index.js"],"names":["module","exports","Controls","onDeposit","onWithdraw","state","amount","balance","showMsg","msg","toast","className","css","controls","type","name","onChange","evt","target","value","onClick","defaultProps","Balance","income","expences","TransactionHistory","rows","items","map","el","key","id","date","Dashboard","transactions","bind","newTransaction","calcIncome","calcExpences","this","setState","prevState","Date","transaction","shortid","generate","toLocaleString","filter","reduce","acc","dashboard","position","autoClose","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3305c36c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"style_controls__3Smer\",\"toast\":\"style_toast__1RoVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"style_balance__3xt3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionHistory\":\"style_TransactionHistory__1ZKzE\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport css from './style.module.css';\r\n\r\nconst Controls = ({ onDeposit, onWithdraw, balance }) => {\r\n  \r\n  const state = {\r\n      amount: 0,\r\n      balance: balance,\r\n  }\r\n\r\n  const showMsg = (msg) => toast(msg, {\r\n    className: 'toast'\r\n  });\r\n  \r\n  const handleDeposit = () => {\r\n    if (state.balance < state.amount) return showMsg(\"На счету недостаточно средств для проведения операции!\");\r\n    if (!state.amount || state.amount < 0) return showMsg('Введите сумму для проведения операции!');\r\n    onDeposit(state.amount);\r\n  };\r\n\r\n  const handleWithdraw = () => {\r\n    if (!state.amount || state.amount < 0) return showMsg('Введите сумму для проведения операции!');\r\n    onWithdraw(state.amount);\r\n  };\r\n\r\n  const handleSetAmount = (evt) => {\r\n    state[evt.target.name] = evt.target.value;\r\n  };\r\n\r\n  return(\r\n    <section className={css.controls}>\r\n      <input type=\"number\" name=\"amount\" onChange={handleSetAmount}/>\r\n      <button type=\"button\" onClick={handleDeposit}>Deposit</button>\r\n      <button type=\"button\" onClick={handleWithdraw}>Withdraw</button>\r\n    </section>\r\n  )  \r\n}\r\n\r\nControls.propTypes = {\r\n  onDeposit: PropTypes.func,\r\n  onWithdrow: PropTypes.func,\r\n  balance: PropTypes.number,\r\n}\r\n\r\nControls.defaultProps = {\r\n  balance: 0,\r\n}\r\n\r\nexport default Controls;","import React from 'react';\r\nimport css from './style.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Balance = ({ balance, income, expences}) => { \r\n  return (\r\n    <section className={css.balance}>\r\n      <span>⬆{income}$</span>\r\n      <span>⬇{expences}$</span>\r\n      <span>Balance: {balance}$</span>\r\n    </section>\r\n\r\n  )\r\n}\r\n\r\nBalance.propTypes = {\r\n  balance: PropTypes.number,\r\n  expences: PropTypes.number,\r\n  income: PropTypes.number,\r\n};\r\n\r\nBalance.defaultProps = {\r\n  balance: 0,\r\n  expences: 0,\r\n  income: 0,\r\n}\r\n\r\nexport default Balance;","import React from 'react';\r\nimport css from './style.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  const rows = items.map(el => \r\n    <tr key={el.id}>\r\n      <td>{el.type}</td>\r\n      <td>{el.amount}</td>\r\n      <td>{el.date}</td>\r\n    </tr>\r\n  )\r\n  return (\r\n    <table className={css.TransactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {rows}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.array,\r\n};\r\n\r\nTransactionHistory.defaultProps = {\r\n  items: [],\r\n}\r\n\r\nexport default TransactionHistory;\r\n\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport Controls from '../Controls';\nimport Balance from '../Balance';\nimport TransactionHistory from '../TransactionHistory';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport css from './style.module.css';\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.onDeposit = this.onDeposit.bind(this);\n    this.onWithdraw = this.onWithdraw.bind(this);\n    this.newTransaction = this.newTransaction.bind(this);\n    this.calcIncome = this.calcIncome.bind(this);\n    this.calcExpences = this.calcExpences.bind(this);\n  }\n\n  state = {\n    transactions: [],\n    balance: 5000,\n  }\n\n  onDeposit(amount) {\n    this.newTransaction(amount, 'deposit');\n    this.setState(prevState => ({ balance: prevState.balance - +amount }));\n  }\n\n  onWithdraw(amount) {\n    this.newTransaction(amount, 'withdrawal');\n    this.setState(prevState => ({ balance: prevState.balance + +amount }));\n  }\n\n  newTransaction(amount, type) {\n    const date = new Date();\n\n    const transaction = {\n      id: shortid.generate(),\n      type: type,\n      amount: amount,\n      date: date.toLocaleString(),\n    }\n\n    this.setState(prevState => ({ transactions: [...prevState.transactions, transaction] }));\n  }\n\n  calcIncome() {\n    const filteredArr = this.state.transactions.filter(el => el.type === \"withdrawal\"),\n      sum = filteredArr.reduce((acc, el) => acc + +el.amount, 0);\n    return sum;\n  }\n\n  calcExpences() {\n    const filteredArr = this.state.transactions.filter(el => el.type === \"deposit\"),\n      sum = filteredArr.reduce((acc, el) => acc + +el.amount, 0);\n    return sum;\n  }\n\n  render() {\n\n    const income = this.calcIncome(),\n      expences = this.calcExpences();\n    \n    return (\n      <div className={css.dashboard}>\n        <Controls onDeposit={this.onDeposit} onWithdraw={this.onWithdraw} balance={this.state.balance} />\n        <Balance balance={this.state.balance} income={income} expences={expences}/>\n        <TransactionHistory items={this.state.transactions} />\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={3000}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\r\nimport Dashboard from '../Dashboard';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n      <Dashboard/>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './style.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}